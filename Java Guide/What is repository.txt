What is Repository file?
Study Case: RoleRepository
Path: main/java/role/RoleRepository
Explain: In the context of a Spring Boot application using JPA (Java Persistence API) for data access, the RoleRepository interface serves as a repository for managing Role entities.


1. Abstraction over Data Access
    The repository pattern provides a layer of abstraction over data access operations.
    Instead of directly interacting with the underlying database through JPA EntityManager or Hibernate Session, you work with higher-level repository interfaces like RoleRepository.
    This improves code readability, maintainability, and testability.

2. CRUD Operations
    The JpaRepository interface, which RoleRepository extends, provides built-in methods for common CRUD (Create, Read, Update, Delete) operations on entities.
    Allowing you to perform data access operations without writing boilerplate code.

3.Custom Query Methods
    Besides the built-in CRUD methods, RoleRepository can define custom query methods to retrieve data based on specific criteria.
    For Example, the findByName() method is a custom query method that retrieves a Role entity by its name. Spring Data JPA
    automatically generates the SQL query based on the method name, reducing the need to write native queries manually.

4.Type Safety and Compile-Time Checks
    The repository interface specifies the entity type (Role) and the type of its primary key (Integer).
    This helps catch errors at compile time, such as typos in method names or incorrect parameter types.

5.Integration with Spring Boot
    Spring Boot auto-configures repositories based on their interfaces and enables them to work seamlessly with JPA entities.
    You only need to define repository interfaces like RoleRepository, and Spring Boot takes care of providing implementations and managing transactions.

In summary, the RoleRepository interface is essential for abstracting data access operations,
providing CRUD functionality,
defining custom queries,
ensuring type safety, and
integrating with Spring Boot's data access infrastructure.

It simplifies working with JPA entities and promotes best practices in Spring Boot applications.
